pipeline {
    agent {
        docker {
            image 'docker:latest'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    def imageName = 'neon-heart-app'
                    def imageTag = "${env.BUILD_NUMBER}"
                    def fullImageName = "${imageName}:${imageTag}"

                    writeFile(file: 'Dockerfile', text: """
                        FROM nginx:alpine
                        COPY . /usr/share/nginx/html
                        EXPOSE 8080
                        CMD ["nginx", "-g", "daemon off;"]
                    """)

                    sh "docker build -t ${fullImageName} ."
                    env.DOCKER_IMAGE = fullImageName
                }
            }
        }

        stage('Deploy to OpenShift') {
            steps {
                script {
                    def appName = 'neon-heart'
                    def openshiftServer = 'https://api.crc.testing:6443'

                    sh """
                        oc login --server=${openshiftServer} \
                               --username=developer \
                               --password=developer \
                               --insecure-skip-tls-verify=true
                        oc new-project ${appName} --display-name='Neon Heart App' --skip-config-write || true
                        oc project ${appName}
                        oc new-app --docker-image=${env.DOCKER_IMAGE} --name=${appName}
                        oc expose svc/${appName} --port=8080
                        oc create route edge --service=${appName} --port=8080 --hostname=${appName}.apps-crc.testing
                    """
                    echo "Application accessible at: http://${appName}.apps-crc.testing"
                }
            }
        }
    }

    post {
        always {
            script {
                sh 'docker rmi ${DOCKER_IMAGE} || true'
            }
        }
    }
}
